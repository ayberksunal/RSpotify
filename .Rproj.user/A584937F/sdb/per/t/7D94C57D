{
    "collab_server" : "",
    "contents" : "library(devtools)\nlibrary(Rspotify)\n\n\n#To contact with  API service by appID  cliend_ID and Client_Secret\n#They can be reached from the website of spotify\nkeys <- spotifyOAuth(app_id = \"ayberk\", client_id = \"782a5daa8f574ba0bcaf9e8af852ad07\", client_secret = \"b1d2f5ce612e46c5a893db6099a5a2ec\")\n\n#countrie's names to find the playlists\nspotifyContries<- \" TOP 50 Belgium, TOP 50 Czech Republic, TOP 50 Denmark, TOP 50 Estonia, TOP 50 Finland, TOP 50 France, TOP 50 Germany, TOP 50 Greece, TOP 50 Iceland, TOP 50 Ireland, TOP 50 Italy, TOP 50 Latvia, TOP 50 Lithuania, TOP 50 Netherlands, TOP 50 Norway, TOP 50 Poland, TOP 50 Portugal, TOP 50 Slovakia, TOP 50 Spain, TOP 50 Sweden, TOP 50 Switzerland, TOP 50 Turkey\"\n#data fram of all countries with splitting \",\"\ncountriesPlayListName<- matrix(unlist(strsplit(spotifyContries, split = \", \")), byrow=T)\n\n\n\n\n#to find the playlist\nallPlaylistsInfo<-data.frame()\nfor(b in countriesPlayListName){\n  #all playslist which have this name\n  foundPlaylistes <- searchPlaylist(b,0,token=keys)\n  #only have list of \"kolibrimusic\"\n  foundPlaylistes <- subset(foundPlaylistes,foundPlaylistes$owner == \"kolibrimusic\")\n  #id nuber off all \"kolibrimusic\"\n  allPlaylistsInfo <- data.frame(rbind( allPlaylistsInfo, foundPlaylistes))\n  }\n\n\n\nfeatures<-data.frame()\nSonuc<-data.frame(id=\"1\",ulke=\"ulkeismi\",oran=0,Hareketlilik='Bilinmiyor')\nfor(i in 1:length(allPlaylistsInfo$id))\n  {\n  #to see which country's id consuming\n  print(allPlaylistsInfo$name[i])\n  allSongsOf_Country<-data.frame\n  #tek ulkenın tüm sarkıları\n  allSongsOf_Country <- data.frame(getPlaylistSongs(\"kolibrimusic\",allPlaylistsInfo$id[i],token=keys))\n  features<-data.frame()\n  \n  for(j in allSongsOf_Country$id)\n    {\n    #We need sleep mfunction\n    #because internet speed sometimes not enough to handle with Json speed\n    Sys.sleep(0.05)\n    \n    print(\"********************New Song Readed************\")\n    #JSON request\n    req <- httr::GET(paste0(\"https://api.spotify.com/v1/audio-features/\", \n                            j), httr::config(token = keys))\n    json1 <- httr::content(req)\n    dados = data.frame(id = json1$id, danceability = json1$danceability, \n                       energy = json1$energy, key = json1$key, loudness = json1$loudness, \n                       mode = json1$mode, speechiness = json1$speechiness, \n                       acousticness = json1$acousticness, instrumentalness = json1$instrumentalness, \n                       liveness = json1$liveness, valence = json1$valence, \n                       tempo = json1$tempo, duration_ms = json1$duration_ms, \n                       time_signature = json1$time_signature, uri = json1$uri, \n                       analysis_url = json1$analysis_url, stringsAsFactors = F)\n  \n \n    features <- rbind( features, dados)\n  }\n  print(\"-----------------------End Of Country-------------\")\n  #calcualtes the energy level\n  resultOfSum <- features$danceability + features$energy\n  totalNumber<-sum(resultOfSum)\n  eklenecekRowSonuc<-data.frame(id=allPlaylistsInfo$id[i],ulke=allPlaylistsInfo$name[i],oran=totalNumber,Hareketlilik='Bilinmiyor')\n  Sonuc<- data.frame(rbind( Sonuc , eklenecekRowSonuc))\n  Sonuc$Hareketlilik=\"Bilinmiyor\"\n}\n\n\n\n#determines the \"hareketlilik\" with quantiles lever\noranSınıflandırma<-quantile(Sosnuc$oran)\nmedianValue<-median(Sonuc$oran)\nfor(k in 2:nrow(Sonuc)){\n  if(Sonuc$oran[k] < oranSınıflandırma[2]){\n    Sonuc$Hareketlilik[k] = \"Hareketsiz\"\n  }\n  if(Sonuc$oran[k] >= oranSınıflandırma[2] && Sonuc$oran[k] < oranSınıflandırma[4])\n  {\n    Sonuc$Hareketlilik[k]='Az Hareketli'\n  }\n  \n  if(Sonuc$oran[k] > oranSınıflandırma[4] ){\n    Sonuc$Hareketlilik[k]='Cok Hareketli'\n  }\n  \n}\n\n\n\n\n\n\n\n",
    "created" : 1513771350362.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2143638232",
    "id" : "7D94C57D",
    "lastKnownWriteTime" : 1513771691,
    "last_content_update" : 1513771691835,
    "path" : "~/RSpotify/topSongs.R",
    "project_path" : "topSongs.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}